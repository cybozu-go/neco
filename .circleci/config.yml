version: 2.1
commands:
  dctest-command:
    description: "datacenter test"
    parameters:
      script:
        type: string
      suite:
        type: string
      datacenter:
        type: string
        default: ""
    steps:
      - run:
          name: Store Service Account
          command: |
            if [ -f .skip ]; then exit 0; fi
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Store secrets
          command: |
            if [ -f .skip ]; then exit 0; fi
            echo "$QUAY_PASSWORD" > secrets
      - run:
          name: Store github-token
          command: |
            if [ -f .skip ]; then exit 0; fi
            echo "$NECO_GITHUB_TOKEN" > github-token
      - run:
          name: Watch console on boot-0
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/watch_boot0
          background: true
      - run:
          name: Watch neco-updater logs
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/watch_service neco-updater
          background: true
      - run:
          name: Watch neco-worker logs
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/watch_service neco-worker
          background: true
      - run:
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/<<parameters.script>> <<parameters.suite>> <<parameters.datacenter>>
          no_output_timeout: 20m

jobs:
  build:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    resource_class: xlarge
    steps:
      - checkout
      - run: make SUDO="" setup
      - run: make test
      - run: make deb SUDO="" FAKEROOT=
  build_release:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
      - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    resource_class: xlarge
    steps:
      - checkout
      - run: make SUDO="" setup
      - run: make test
      - run:
          name: Build deb package
          command: |
            VERSION=$(echo $CIRCLE_TAG | sed 's/^release-//')
            make deb SUDO="" VERSION="$VERSION" TAGS=release FAKEROOT=
      - persist_to_workspace:
          root: .
          paths:
            - "*.deb"
  deploy_github:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
    steps:
      - attach_workspace:
          at: ./artifacts
      - run: ghr -prerelease -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG} ./artifacts/
  dctest-functions:
    docker:
      - image: google/cloud-sdk
    resource_class: xlarge
    steps:
      - checkout
      - dctest-command:
          script: run-dctest.sh
          suite: ./functions
      - run:
          name: Clean up SSH keys generated by `gcloud compute`
          command: |
            gcloud --quiet --project neco-test compute project-info remove-metadata --keys=ssh-keys
  dctest-upgrade:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - dctest-command:
          script: run-dctest-release.sh
          suite: ./bootstrap
          datacenter: staging
      - run:
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/run-dctest-suite.sh upgrade
          no_output_timeout: 20m
  generate-artifacts:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
    steps:
      - checkout
      - run: go install -mod=vendor ./pkg/generate-artifacts/
      - run: generate-artifacts --release > artifacts_release.go
      - persist_to_workspace:
          root: .
          paths:
            - "artifacts_release.go"
  dctest-functions-release:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - run: git checkout release
      - run: git merge --no-commit origin/${CIRCLE_BRANCH}
      - run: cp /tmp/workspace/artifacts_release.go .
      - run:
          name: Check diff
          command: |
            diffs=$(git status -s)
            if [ "$diffs" = "" ]; then touch .skip; exit 0; fi
            printf "%s\n" "$diffs"
      - dctest-command:
          script: run-dctest-release.sh
          suite: ./functions
  dctest-upgrade-release:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - run: git checkout release
      - run: git merge --no-commit origin/${CIRCLE_BRANCH}
      - run: cp /tmp/workspace/artifacts_release.go .
      - run:
          name: Check diff
          command: |
            diffs=$(git status -s)
            if [ "$diffs" = "" ]; then touch .skip; exit 0; fi
            printf "%s\n" "$diffs"
      - run: git add -u
      - run: git commit -m 'update artifacts'
      - dctest-command:
          script: run-dctest-release.sh
          suite: ./bootstrap
          datacenter: staging
      - run:
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/run-dctest-suite.sh upgrade release
          no_output_timeout: 20m
  update-release:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - run: git checkout release
      - run: git merge --no-commit origin/master
      - run: cp /tmp/workspace/artifacts_release.go .
      - run:
          name: Check diff
          command: |
            diffs=$(git status -s)
            if [ "$diffs" = "" ]; then touch .skip; exit 0; fi
            printf "%s\n" "$diffs"
      - add_ssh_keys:
          fingerprints:
            - "d7:2a:c8:5d:c4:32:7e:20:6f:bc:20:7c:ab:c4:24:88"
      - run:
          name: Store github-token
          command: |
            if [ -f .skip ]; then exit 0; fi
            echo "$NECO_GITHUB_TOKEN" > github-token
      - run:
          name: Commit and push to GitHub
          command: |
            if [ -f .skip ]; then exit 0; fi
            ./bin/commit-push.sh
  build_necogcp:
    docker:
      - image: quay.io/cybozu/golang:1.12-bionic
    working_directory: /work
    steps:
      - checkout
      - run: make SUDO="" setup
      - run: make necogcp
      - persist_to_workspace:
          root: /go/bin
          paths:
            - necogcp
  update-vmx-enabled-image:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: |
            /tmp/workspace/necogcp neco-test create-image
          no_output_timeout: 20m

workflows:
  version: 2
  main:
    jobs:
      - build
      - dctest-functions:
          filters:
            branches:
              ignore:
                - release
                - master
      - dctest-upgrade:
          filters:
            branches:
              ignore:
                - release
                - master
  release:
    jobs:
      - build_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
      - deploy_github:
          requires:
            - build_release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
  daily:
    triggers:
      - schedule:
          cron: "0 15 * * 1-5"
          filters:
            branches:
              only:
                - release
    jobs:
      - generate-artifacts
      - dctest-functions-release:
          requires:
            - generate-artifacts
      - dctest-upgrade-release:
          requires:
            - generate-artifacts
      - update-release:
          requires:
            - dctest-functions-release
            - dctest-upgrade-release
  master:
    jobs:
      - generate-artifacts:
          filters:
            branches:
              only:
                - master
      - dctest-functions-release:
          requires:
            - generate-artifacts
          filters:
            branches:
              only:
                - master
      - dctest-upgrade-release:
          requires:
            - generate-artifacts
          filters:
            branches:
              only:
                - master
      - update-release:
          requires:
            - dctest-functions-release
            - dctest-upgrade-release
          filters:
            branches:
              only:
                - master
  weekly:
    triggers:
      - schedule:
          cron: "0 15 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_necogcp
      - update-vmx-enabled-image:
          requires:
            - build_necogcp
