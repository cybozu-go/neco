log stderr all;
protocol device {
    scan time 60;
}
protocol direct direct1 {
    ipv4;
    interface "{{.Rack.ToR2.NodeInterface}}";
}
protocol bfd {
    interface "*" {
       min rx interval 400 ms;
       min tx interval 400 ms;
    };
}
protocol kernel {
    merge paths;
    ipv4 {
        export filter {
            if source = RTS_DEVICE then reject;
            accept;
        };
    };
}
{{$asnRack := .Rack.ASN -}}
{{$asnSpine := .ASNSpine -}}
{{range $spine := .Spines -}}
protocol bgp '{{$spine.Name}}' {
    local as {{$asnRack}};
    neighbor {{$spine.ToR2Address}} as {{$asnSpine}};
    bfd;

    ipv4 {
        import all;
        export all;
    };
}
{{end -}}
template bgp bgpnode {
    local as {{.Rack.ASN}};
    direct;
    rr client;
    bfd;
    passive;
    error wait time 5,20;

    ipv4 {
        import all;
        export filter {
                if proto = "direct1" then reject;
                accept;
        };
    };
}
protocol bgp '{{.Rack.BootNode.Name}}' from bgpnode {
    neighbor {{$.Rack.BootNode.Node2Address}} as {{.Rack.ASN}};
}
{{$rackName := .Rack.Name -}}
{{range $cs := .Rack.CSList -}}
protocol bgp '{{$rackName}}-{{$cs.Name}}' from bgpnode {
    neighbor {{$cs.Node2Address}} as {{$asnRack}};
}
{{end -}}
{{range $ss := .Rack.SSList -}}
protocol bgp '{{$rackName}}-{{$ss.Name}}' from bgpnode {
    neighbor {{$ss.Node2Address}} as {{$asnRack}};
}
{{end -}}
