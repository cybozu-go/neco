{{$rackIdx := .RackIdx -}}
{{$self := index .Args.Racks $rackIdx -}}
log stderr all;
protocol device {
    scan time 60;
}
protocol direct direct1 {
    ipv4;
    interface "{{$self.ToR1.NodeInterface}}";
}
protocol bfd {
    interface "*" {
       min rx interval 400 ms;
       min tx interval 400 ms;
    };
}
protocol kernel {
    merge paths;
    ipv4 {
        export filter {
            if source = RTS_DEVICE then reject;
            accept;
        };
    };
}
{{$asnSpine := .Args.Network.ASNSpine -}}
{{range $spine := .Args.Spines -}}
protocol bgp '{{$spine.Name}}' {
    local as {{$self.ASN}};
    neighbor {{($spine.ToR1Address $rackIdx).IP}} as {{$asnSpine}};
    bfd;

    ipv4 {
        import all;
        export all;
    };
}
{{end -}}
template bgp bgpnode {
    local as {{$self.ASN}};
    direct;
    rr client;
    bfd;
    passive;
    error wait time 5,20;

    ipv4 {
        import all;
        export filter {
                if proto = "direct1" then reject;
                accept;
        };
    };
}
protocol bgp 'boot-{{$rackIdx}}' from bgpnode {
    neighbor {{$self.BootNode.Node1Address.IP}} as {{$self.ASN}};
}
{{range $cs := $self.CSList -}}
protocol bgp '{{$self.Name}}-{{$cs.Name}}' from bgpnode {
    neighbor {{$cs.Node1Address.IP}} as {{$self.ASN}};
}
{{end -}}
{{range $ss := $self.SSList -}}
protocol bgp '{{$self.Name}}-{{$ss.Name}}' from bgpnode {
    neighbor {{$ss.Node1Address.IP}} as {{$self.ASN}};
}
{{end -}}
