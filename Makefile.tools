include Makefile.common

MAKEFLAGS += -j$(shell nproc)
CURL=curl -Lsf
WGET=wget --retry-connrefused --no-verbose

## Cache
NODE_EXPORTER_DLDIR := $(DOWNLOADDIR)/node_exporter-v$(NODE_EXPORTER_VERSION)
NODE_EXPORTER_DOWNLOAD := $(NODE_EXPORTER_DLDIR)/downloaded
CONTAINERD_DLDIR := $(DOWNLOADDIR)/containerd-v$(CONTAINERD_VERSION)
CONTAINERD_DOWNLOAD := $(CONTAINERD_DLDIR)/downloaded
CRICTL_DLDIR := $(DOWNLOADDIR)/crictl-v$(CRITOOLS_VERSION)
CRICTL_DOWNLOAD := $(CRICTL_DLDIR)/downloaded
ARGOCD_DLDIR := $(DOWNLOADDIR)/argocd-v$(ARGOCD_VERSION)
ARGOCD_DOWNLOAD := $(ARGOCD_DLDIR)/downloaded
KUBECTL_DLDIR := $(DOWNLOADDIR)/kubectl-v$(K8S_VERSION)
KUBECTL_DOWNLOAD := $(KUBECTL_DLDIR)/downloaded
KUBESEAL_DLDIR := $(DOWNLOADDIR)/kubeseal-v$(KUBESEAL_VERSION)
KUBESEAL_DOWNLOAD := $(KUBESEAL_DLDIR)/downloaded
STERN_DLDIR := $(DOWNLOADDIR)/stern-v$(STERN_VERSION)
STERN_DOWNLOAD := $(STERN_DLDIR)/downloaded
KUSTOMIZE_DLDIR := $(DOWNLOADDIR)/kustomize-v$(KUSTOMIZE_VERSION)
KUSTOMIZE_DOWNLOAD := $(KUSTOMIZE_DLDIR)/downloaded
TELEPORT_DLDIR := $(DOWNLOADDIR)/teleport-v$(TELEPORT_VERSION)
TELEPORT_DOWNLOAD := $(TELEPORT_DLDIR)/downloaded
CKE_DLDIR := $(DOWNLOADDIR)/cke-v$(CKE_VERSION)
CKE_DOWNLOAD := $(CKE_DLDIR)/downloaded
MOCO_DLDIR := $(DOWNLOADDIR)/moco-v$(MOCO_VERSION)
MOCO_DOWNLOAD := $(MOCO_DLDIR)/downloaded
LOGCLI_DLDIR := $(DOWNLOADDIR)/logcli-v$(LOGCLI_VERSION)
LOGCLI_DOWNLOAD := $(LOGCLI_DLDIR)/downloaded
YQ_DLDIR := $(DOWNLOADDIR)/yq-v$(YQ_VERSION)
YQ_DOWNLOAD := $(YQ_DLDIR)/downloaded
KUBECTL_NEAT_DLDIR := $(DOWNLOADDIR)/kubectl-neat-v$(KUBECTL_NEAT_VERSION)
KUBECTL_NEAT_DOWNLOAD := $(KUBECTL_NEAT_DLDIR)/downloaded

.PHONY: all
all: node_exporter containerd crictl argocd kubectl kubeseal stern kustomize teleport cke moco logcli yq kubectl-neat
	mkdir -p $(DOWNLOADDIR)
	touch $(DOWNLOADDIR)/.downloaded

$(NODE_EXPORTER_DOWNLOAD):
	mkdir -p $(NODE_EXPORTER_DLDIR)
	$(WGET) -O $(NODE_EXPORTER_DLDIR)/node_exporter.tar.gz https://github.com/prometheus/node_exporter/releases/download/v$(NODE_EXPORTER_VERSION)/node_exporter-$(NODE_EXPORTER_VERSION).linux-amd64.tar.gz
	touch $@

.PHONY: node_exporter
node_exporter: $(NODE_EXPORTER_DOWNLOAD)
	rm -f $(LIBEXECDIR)/node_exporter
	rm -rf $(BUILDDIR)/node_exporter
	mkdir -p $(SBINDIR) $(DOCDIR)/$@ $(LIBEXECDIR)
	tar zxf $(NODE_EXPORTER_DLDIR)/node_exporter.tar.gz -C $(NODE_EXPORTER_DLDIR) --strip-components=1
	cp $(NODE_EXPORTER_DLDIR)/node_exporter $(SBINDIR)/
	cp $(NODE_EXPORTER_DLDIR)/LICENSE       $(DOCDIR)/$@/
	cp $(NODE_EXPORTER_DLDIR)/NOTICE        $(DOCDIR)/$@/
	ln -s /usr/sbin/node_exporter $(LIBEXECDIR)/node_exporter

$(CONTAINERD_DOWNLOAD):
	mkdir -p $(CONTAINERD_DLDIR)
	$(WGET) -O $(CONTAINERD_DLDIR)/containerd.tar.gz https://github.com/containerd/containerd/releases/download/v$(CONTAINERD_VERSION)/containerd-$(CONTAINERD_VERSION)-linux-amd64.tar.gz
	$(WGET) -O $(CONTAINERD_DLDIR)/LICENSE   https://raw.githubusercontent.com/containerd/containerd/v$(CONTAINERD_VERSION)/LICENSE
	$(WGET) -O $(CONTAINERD_DLDIR)/NOTICE    https://raw.githubusercontent.com/containerd/containerd/v$(CONTAINERD_VERSION)/NOTICE
	$(WGET) -O $(CONTAINERD_DLDIR)/README.md https://raw.githubusercontent.com/containerd/containerd/v$(CONTAINERD_VERSION)/README.md
	touch $@

.PHONY: containerd
containerd: $(CONTAINERD_DOWNLOAD)
	mkdir -p $(LIBEXECDIR) $(DOCDIR)/$@/
	tar xzf $(CONTAINERD_DLDIR)/containerd.tar.gz --strip-components=1 -C $(LIBEXECDIR) bin/containerd bin/containerd-shim bin/containerd-shim-runc-v1 bin/containerd-shim-runc-v2 bin/ctr
	cp $(CONTAINERD_DLDIR)/LICENSE   $(DOCDIR)/$@/LICENSE
	cp $(CONTAINERD_DLDIR)/NOTICE    $(DOCDIR)/$@/NOTICE
	cp $(CONTAINERD_DLDIR)/README.md $(DOCDIR)/$@/README.md

$(CRICTL_DOWNLOAD):
	mkdir -p $(CRICTL_DLDIR)
	$(WGET) -O $(CRICTL_DLDIR)/crictl.tar.gz https://github.com/kubernetes-sigs/cri-tools/releases/download/v$(CRITOOLS_VERSION)/crictl-v$(CRITOOLS_VERSION)-linux-amd64.tar.gz
	$(WGET) -O $(CRICTL_DLDIR)/LICENSE   https://raw.githubusercontent.com/kubernetes-sigs/cri-tools/v$(CRITOOLS_VERSION)/LICENSE
	$(WGET) -O $(CRICTL_DLDIR)/README.md https://raw.githubusercontent.com/kubernetes-sigs/cri-tools/v$(CRITOOLS_VERSION)/README.md
	touch $@

.PHONY: crictl
crictl: $(CRICTL_DOWNLOAD)
	mkdir -p $(LIBEXECDIR) $(DOCDIR)/$@/
	tar zxf $(CRICTL_DLDIR)/crictl.tar.gz --no-same-owner -C $(LIBEXECDIR)
	cp $(CRICTL_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(CRICTL_DLDIR)/README.md $(DOCDIR)/$@/README.md

$(ARGOCD_DOWNLOAD):
	mkdir -p $(ARGOCD_DLDIR)
	$(WGET) -O $(ARGOCD_DLDIR)/argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/v$(ARGOCD_VERSION)/argocd-linux-amd64
	$(WGET) -O $(ARGOCD_DLDIR)/argocd.exe https://github.com/argoproj/argo-cd/releases/download/v$(ARGOCD_VERSION)/argocd-windows-amd64.exe
	$(WGET) -O $(ARGOCD_DLDIR)/argocd-darwin-amd64 https://github.com/argoproj/argo-cd/releases/download/v$(ARGOCD_VERSION)/argocd-darwin-amd64
	$(WGET) -O $(ARGOCD_DLDIR)/LICENSE   https://raw.githubusercontent.com/argoproj/argo-cd/v$(ARGOCD_VERSION)/LICENSE
	$(WGET) -O $(ARGOCD_DLDIR)/README.md https://raw.githubusercontent.com/argoproj/argo-cd/v$(ARGOCD_VERSION)/README.md
	touch $@

.PHONY: argocd
argocd: $(ARGOCD_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	cp $(ARGOCD_DLDIR)/argocd-linux-amd64 $(BINDIR)/argocd
	chmod +x $(BINDIR)/argocd
	cp $(ARGOCD_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(ARGOCD_DLDIR)/README.md $(DOCDIR)/$@/README.md
	cp $(ARGOCD_DLDIR)/argocd.exe $(WINDOWS_BINDIR)/argocd.exe
	cp $(ARGOCD_DLDIR)/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(ARGOCD_DLDIR)/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(ARGOCD_DLDIR)/argocd-darwin-amd64 $(MAC_BINDIR)/argocd
	chmod +x $(MAC_BINDIR)/argocd
	cp $(ARGOCD_DLDIR)/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(ARGOCD_DLDIR)/README.md $(MAC_DOCDIR)/$@/README.md

$(KUBECTL_DOWNLOAD):
	mkdir -p $(KUBECTL_DLDIR)
	$(WGET) -O $(KUBECTL_DLDIR)/kubectl-linux-amd64 https://storage.googleapis.com/kubernetes-release/release/v$(K8S_VERSION)/bin/linux/amd64/kubectl
	$(WGET) -O $(KUBECTL_DLDIR)/kubectl.exe https://storage.googleapis.com/kubernetes-release/release/v$(K8S_VERSION)/bin/windows/amd64/kubectl.exe
	$(WGET) -O $(KUBECTL_DLDIR)/kubect-darwin-amd64 https://storage.googleapis.com/kubernetes-release/release/v$(K8S_VERSION)/bin/darwin/amd64/kubectl
	$(WGET) -O $(KUBECTL_DLDIR)/LICENSE   https://raw.githubusercontent.com/kubernetes/kubernetes/v$(K8S_VERSION)/LICENSE
	$(WGET) -O $(KUBECTL_DLDIR)/README.md https://raw.githubusercontent.com/kubernetes/kubernetes/v$(K8S_VERSION)/README.md
	touch $@

.PHONY: kubectl
kubectl: $(KUBECTL_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	cp $(KUBECTL_DLDIR)/kubectl-linux-amd64 $(BINDIR)/kubectl
	chmod +x $(BINDIR)/kubectl
	cp $(KUBECTL_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(KUBECTL_DLDIR)/README.md $(DOCDIR)/$@/README.md
	cp $(KUBECTL_DLDIR)/kubectl.exe $(WINDOWS_BINDIR)/kubectl.exe
	cp $(KUBECTL_DLDIR)/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(KUBECTL_DLDIR)/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(KUBECTL_DLDIR)/kubect-darwin-amd64 $(MAC_BINDIR)/kubectl
	chmod +x $(MAC_BINDIR)/kubectl
	cp $(KUBECTL_DLDIR)/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(KUBECTL_DLDIR)/README.md $(MAC_DOCDIR)/$@/README.md

$(KUBESEAL_DOWNLOAD):
	mkdir -p $(KUBESEAL_DLDIR)
	$(WGET) -O $(KUBESEAL_DLDIR)/kubeseal-linux-amd64 https://github.com/bitnami-labs/sealed-secrets/releases/download/v$(KUBESEAL_VERSION)/kubeseal-linux-amd64
	$(WGET) -O $(KUBESEAL_DLDIR)/kubeseal.exe https://github.com/bitnami-labs/sealed-secrets/releases/download/v$(KUBESEAL_VERSION)/kubeseal.exe
	$(WGET) -O $(KUBESEAL_DLDIR)/kubeseal-darwin-amd64 https://github.com/bitnami-labs/sealed-secrets/releases/download/v$(KUBESEAL_VERSION)/kubeseal-darwin-amd64
	$(WGET) -O $(KUBESEAL_DLDIR)/LICENSE      https://github.com/bitnami-labs/sealed-secrets/blob/v$(KUBESEAL_VERSION)/LICENSE
	$(WGET) -O $(KUBESEAL_DLDIR)/README.md    https://github.com/bitnami-labs/sealed-secrets/blob/v$(KUBESEAL_VERSION)/README.md
	touch $@

.PHONY: kubeseal
kubeseal: $(KUBESEAL_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	cp $(KUBESEAL_DLDIR)/kubeseal-linux-amd64 $(BINDIR)/kubeseal
	chmod +x $(BINDIR)/kubeseal
	cp $(KUBESEAL_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(KUBESEAL_DLDIR)/README.md $(DOCDIR)/$@/README.md
	cp $(KUBESEAL_DLDIR)/kubeseal.exe $(WINDOWS_BINDIR)/kubeseal.exe
	cp $(KUBESEAL_DLDIR)/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(KUBESEAL_DLDIR)/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(KUBESEAL_DLDIR)/kubeseal-darwin-amd64 $(MAC_BINDIR)/kubeseal
	chmod +x $(MAC_BINDIR)/kubeseal
	cp $(KUBESEAL_DLDIR)/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(KUBESEAL_DLDIR)/README.md $(MAC_DOCDIR)/$@/README.md

$(STERN_DOWNLOAD):
	mkdir -p $(STERN_DLDIR)
	$(WGET) -O - https://github.com/stern/stern/releases/download/v$(STERN_VERSION)/stern_$(STERN_VERSION)_linux_amd64.tar.gz | tar xvzf - -C $(STERN_DLDIR)
	$(WGET) -O - https://github.com/stern/stern/releases/download/v${STERN_VERSION}/stern_$(STERN_VERSION)_windows_amd64.tar.gz | tar xvzf - -C $(STERN_DLDIR)
	$(WGET) -O - https://github.com/stern/stern/releases/download/v${STERN_VERSION}/stern_$(STERN_VERSION)_darwin_amd64.tar.gz | tar xvzf - -C $(STERN_DLDIR)
	$(WGET) -O $(STERN_DLDIR)/README.md https://raw.githubusercontent.com/stern/stern/v$(STERN_VERSION)/README.md
	touch $@

.PHONY: stern
stern: $(STERN_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	cp $(STERN_DLDIR)/stern_$(STERN_VERSION)_linux_amd64/stern $(BINDIR)/stern
	chmod +x $(BINDIR)/stern
	cp $(STERN_DLDIR)/stern_$(STERN_VERSION)_linux_amd64/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(STERN_DLDIR)/README.md $(DOCDIR)/$@/README.md
	cp $(STERN_DLDIR)/stern_$(STERN_VERSION)_windows_amd64/stern.exe $(WINDOWS_BINDIR)/stern.exe
	cp $(STERN_DLDIR)/stern_$(STERN_VERSION)_windows_amd64/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(STERN_DLDIR)/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(STERN_DLDIR)/stern_$(STERN_VERSION)_darwin_amd64/stern $(MAC_BINDIR)/stern
	cp $(STERN_DLDIR)/stern_$(STERN_VERSION)_darwin_amd64/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(STERN_DLDIR)/README.md $(MAC_DOCDIR)/$@/README.md

$(KUSTOMIZE_DOWNLOAD):
	mkdir -p $(KUSTOMIZE_DLDIR)
	$(WGET) -O $(KUSTOMIZE_DLDIR)/kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv$(KUSTOMIZE_VERSION)/kustomize_v$(KUSTOMIZE_VERSION)_linux_amd64.tar.gz
	$(WGET) -O $(KUSTOMIZE_DLDIR)/LICENSE   https://raw.githubusercontent.com/kubernetes-sigs/kustomize/kustomize/v${KUSTOMIZE_VERSION}/LICENSE
	$(WGET) -O $(KUSTOMIZE_DLDIR)/README.md https://raw.githubusercontent.com/kubernetes-sigs/kustomize/kustomize/v${KUSTOMIZE_VERSION}/README.md
	touch $@

.PHONY: kustomize
kustomize: $(KUSTOMIZE_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/
	tar xzf $(KUSTOMIZE_DLDIR)/kustomize.tar.gz -C $(BINDIR)
	cp $(KUSTOMIZE_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(KUSTOMIZE_DLDIR)/README.md $(DOCDIR)/$@/README.md

$(TELEPORT_DOWNLOAD):
	mkdir -p $(TELEPORT_DLDIR)/common -p $(TELEPORT_DLDIR)/teleport-linux-amd64 -p $(TELEPORT_DLDIR)/teleport-darwin-amd64 -p $(TELEPORT_DLDIR)/teleport-windows-amd64
	for i in $$(seq 10); do \
		if $(WGET) -O $(TELEPORT_DLDIR)/teleport.zip https://get.gravitational.com/teleport-v$(TELEPORT_VERSION)-windows-amd64-bin.zip; then break; fi; \
	done
	for i in $$(seq 10); do \
		if $(WGET) -O $(TELEPORT_DLDIR)/teleport-linux-amd64.tar.gz https://get.gravitational.com/teleport-v$(TELEPORT_VERSION)-linux-amd64-bin.tar.gz; then break; fi; \
	done
	for i in $$(seq 10); do \
		if $(WGET) -O $(TELEPORT_DLDIR)/teleport-darwin-amd64.tar.gz https://get.gravitational.com/teleport-v$(TELEPORT_VERSION)-darwin-amd64-bin.tar.gz; then break; fi; \
	done
	unzip -j $(TELEPORT_DLDIR)/teleport.zip teleport/tsh.exe -d $(TELEPORT_DLDIR)/teleport-windows-amd64
	tar -C $(TELEPORT_DLDIR)/teleport-linux-amd64 --strip-components=1 -xzf $(TELEPORT_DLDIR)/teleport-linux-amd64.tar.gz teleport/tsh teleport/tctl teleport/teleport
	tar -C $(TELEPORT_DLDIR)/teleport-darwin-amd64 --strip-components=1 -xzf $(TELEPORT_DLDIR)/teleport-darwin-amd64.tar.gz teleport/tsh
	$(WGET) -O $(TELEPORT_DLDIR)/common/LICENSE https://raw.githubusercontent.com/gravitational/teleport/v$(TELEPORT_VERSION)/LICENSE
	$(WGET) -O $(TELEPORT_DLDIR)/common/README.md https://raw.githubusercontent.com/gravitational/teleport/v$(TELEPORT_VERSION)/README.md
	touch $@

.PHONY: teleport
teleport: $(TELEPORT_DOWNLOAD)
	mkdir -p $(BINDIR) $(SBINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	cp $(TELEPORT_DLDIR)/teleport-linux-amd64/tctl $(BINDIR)
	cp $(TELEPORT_DLDIR)/teleport-linux-amd64/teleport $(SBINDIR)
	cp $(TELEPORT_DLDIR)/teleport-linux-amd64/tsh $(BINDIR)
	cp $(TELEPORT_DLDIR)/common/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(TELEPORT_DLDIR)/common/README.md $(DOCDIR)/$@/README.md
	cp $(TELEPORT_DLDIR)/teleport-windows-amd64/tsh.exe $(WINDOWS_BINDIR)
	cp $(TELEPORT_DLDIR)/common/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(TELEPORT_DLDIR)/common/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(TELEPORT_DLDIR)/teleport-darwin-amd64/tsh $(MAC_BINDIR)
	cp $(TELEPORT_DLDIR)/common/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(TELEPORT_DLDIR)/common/README.md $(MAC_DOCDIR)/$@/README.md

$(CKE_DOWNLOAD):
	mkdir -p $(CKE_DLDIR)
	git clone --depth 1 -b v$(CKE_VERSION) https://github.com/cybozu-go/cke $(CKE_DLDIR)/source
	cd $(CKE_DLDIR)/source; go build -ldflags="-w -s" ./pkg/cke
	cd $(CKE_DLDIR)/source; go build -ldflags="-w -s" ./pkg/cke-localproxy
	cd $(CKE_DLDIR)/source; go build -ldflags="-w -s" ./pkg/ckecli
	touch $@

.PHONY: cke
cke: $(CKE_DOWNLOAD)
	mkdir -p $(BINDIR) $(SBINDIR)
	cp $(CKE_DLDIR)/source/cke $(SBINDIR)/cke
	cp $(CKE_DLDIR)/source/cke-localproxy $(SBINDIR)/cke-localproxy
	cp $(CKE_DLDIR)/source/ckecli $(BINDIR)/ckecli

$(MOCO_DOWNLOAD):
	mkdir -p $(MOCO_DLDIR)
	$(WGET) -O $(MOCO_DLDIR)/kubectl-moco-linux-amd64 https://github.com/cybozu-go/moco/releases/download/v$(MOCO_VERSION)/kubectl-moco-linux-amd64
	$(WGET) -O $(MOCO_DLDIR)/kubectl-moco.exe https://github.com/cybozu-go/moco/releases/download/v$(MOCO_VERSION)/kubectl-moco-windows-amd64.exe
	$(WGET) -O $(MOCO_DLDIR)/kubectl-moco-darwin-amd64 https://github.com/cybozu-go/moco/releases/download/v$(MOCO_VERSION)/kubectl-moco-darwin-amd64
	$(WGET) -O $(MOCO_DLDIR)/LICENSE          https://raw.githubusercontent.com/cybozu-go/moco/v$(MOCO_VERSION)/LICENSE
	$(WGET) -O $(MOCO_DLDIR)/README.md        https://raw.githubusercontent.com/cybozu-go/moco/v$(MOCO_VERSION)/README.md
	touch $@

.PHONY: moco
moco: $(MOCO_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	cp $(MOCO_DLDIR)/kubectl-moco-linux-amd64 $(BINDIR)/kubectl-moco
	chmod +x $(BINDIR)/kubectl-moco
	cp $(MOCO_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(MOCO_DLDIR)/README.md $(DOCDIR)/$@/README.md
	cp $(MOCO_DLDIR)/kubectl-moco.exe $(WINDOWS_BINDIR)
	cp $(MOCO_DLDIR)/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(MOCO_DLDIR)/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(MOCO_DLDIR)/kubectl-moco-darwin-amd64 $(MAC_BINDIR)/kubectl-moco
	chmod +x $(MAC_BINDIR)/kubectl-moco
	cp $(MOCO_DLDIR)/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(MOCO_DLDIR)/README.md $(MAC_DOCDIR)/$@/README.md

$(LOGCLI_DOWNLOAD):
	mkdir -p $(LOGCLI_DLDIR)
	$(WGET) -O $(LOGCLI_DLDIR)/logcli-linux-amd64.zip       https://github.com/grafana/loki/releases/download/v$(LOGCLI_VERSION)/logcli-linux-amd64.zip
	$(WGET) -O $(LOGCLI_DLDIR)/logcli-windows-amd64.exe.zip https://github.com/grafana/loki/releases/download/v$(LOGCLI_VERSION)/logcli-windows-amd64.exe.zip
	$(WGET) -O $(LOGCLI_DLDIR)/logcli-darwin-amd64.zip      https://github.com/grafana/loki/releases/download/v$(LOGCLI_VERSION)/logcli-darwin-amd64.zip
	$(WGET) -O $(LOGCLI_DLDIR)/LICENSE   https://raw.githubusercontent.com/grafana/loki/v$(LOGCLI_VERSION)/LICENSE
	$(WGET) -O $(LOGCLI_DLDIR)/README.md https://raw.githubusercontent.com/grafana/loki/v$(LOGCLI_VERSION)/README.md
	touch $@

.PHONY: logcli
logcli: $(LOGCLI_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/ $(WINDOWS_BINDIR) $(WINDOWS_DOCDIR)/$@/ $(MAC_BINDIR) $(MAC_DOCDIR)/$@/
	unzip -p $(LOGCLI_DLDIR)/logcli-linux-amd64.zip > $(BINDIR)/logcli
	chmod +x $(BINDIR)/logcli
	unzip -p $(LOGCLI_DLDIR)/logcli-windows-amd64.exe.zip > $(WINDOWS_BINDIR)/logcli.exe
	unzip -p $(LOGCLI_DLDIR)/logcli-darwin-amd64.zip > $(MAC_BINDIR)/logcli 
	chmod +x $(MAC_BINDIR)/logcli
	cp $(LOGCLI_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(LOGCLI_DLDIR)/LICENSE $(WINDOWS_DOCDIR)/$@/LICENSE
	cp $(LOGCLI_DLDIR)/LICENSE $(MAC_DOCDIR)/$@/LICENSE
	cp $(LOGCLI_DLDIR)/README.md $(DOCDIR)/$@/README.md
	cp $(LOGCLI_DLDIR)/README.md $(WINDOWS_DOCDIR)/$@/README.md
	cp $(LOGCLI_DLDIR)/README.md $(MAC_DOCDIR)/$@/README.md

$(YQ_DOWNLOAD):
	mkdir -p $(YQ_DLDIR)
	$(WGET) -O $(YQ_DLDIR)/yq.tar.gz https://github.com/mikefarah/yq/releases/download/v$(YQ_VERSION)/yq_linux_amd64.tar.gz
	$(WGET) -O $(YQ_DLDIR)/LICENSE   https://raw.githubusercontent.com/mikefarah/yq/v${YQ_VERSION}/LICENSE
	$(WGET) -O $(YQ_DLDIR)/README.md https://raw.githubusercontent.com/mikefarah/yq/v${YQ_VERSION}/README.md
	touch $@

.PHONY: yq
yq: $(YQ_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/
	tar xzf $(YQ_DLDIR)/yq.tar.gz -C $(BINDIR)
	mv $(BINDIR)/yq_linux_amd64 $(BINDIR)/yq
	cp $(YQ_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(YQ_DLDIR)/README.md $(DOCDIR)/$@/README.md

$(KUBECTL_NEAT_DOWNLOAD):
	mkdir -p $(KUBECTL_NEAT_DLDIR)
	$(WGET) -O $(KUBECTL_NEAT_DLDIR)/kubectl-neat.tar.gz https://github.com/itaysk/kubectl-neat/releases/download/v$(KUBECTL_NEAT_VERSION)/kubectl-neat_linux_amd64.tar.gz
	$(WGET) -O $(KUBECTL_NEAT_DLDIR)/LICENSE   https://raw.githubusercontent.com/itaysk/kubectl-neat/v${KUBECTL_NEAT_VERSION}/LICENSE
	$(WGET) -O $(KUBECTL_NEAT_DLDIR)/Readme.md https://raw.githubusercontent.com/itaysk/kubectl-neat/v${KUBECTL_NEAT_VERSION}/Readme.md
	touch $@

.PHONY: kubectl-neat
kubectl-neat: $(KUBECTL_NEAT_DOWNLOAD)
	mkdir -p $(BINDIR) $(DOCDIR)/$@/
	tar xzf $(KUBECTL_NEAT_DLDIR)/kubectl-neat.tar.gz -C $(BINDIR)
	cp $(KUBECTL_NEAT_DLDIR)/LICENSE $(DOCDIR)/$@/LICENSE
	cp $(KUBECTL_NEAT_DLDIR)/Readme.md $(DOCDIR)/$@/Readme.md

.PHONY: clean
clean:
	rm -rf $(BUILDDIR) $(WORKDIR) $(DOWNLOADDIR)
